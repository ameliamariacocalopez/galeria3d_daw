*{
    margin: 0px;
    padding: 0px;
    box-sizing: border-box;
}
body{
    /*background: linear-gradient(to right, #2c5364, #0f2027); para hacer degradado*/
    background-image: url(img/imgfondo.jpg);
    background-attachment: fixed;
    background-repeat: no-repeat;
    background-position: center;
    background-size: 100% 100%;
    height: 100vh;
    display: flex; /*para que se coloque de manera horizontal*/
    align-items: center; /*para centrar*/
    justify-content: center; /*justificar todo al centro*/
    overflow: hidden; /*para que no se salga nada de la caja*/
}
.slider{
    position: relative;
    width: 200px;
    height: 200px;

    transform-style: preserve-3d; /*La propiedad transforma-style decide si los elementos anidados preservan
                                    las transformaci√≥n 3d o no (flat). En nuestro caso queremos que el 
                                    elemento .slider tenga transform-style: preserve-3d ya que queremos que los elementos
                                    hijos tengan un aspecto tridimensional*/
    animation: rotate 25s linear infinite;
}
@keyframes rotate {
    0%{
        transform: perspective(1000px) rotateY(0deg);
    }
    100%{
        transform: perspective(1000px) rotateY(360deg);
    }
}
.slider span{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    transform-origin: center;
    transform-style: preserve-3d;
    transform: rotateY(calc(var(--i)*45deg))translateZ(350px);/* meter una funcion para establecer una variable dentro del css para que el movimiento de todos los elementos sea siempre el mismi*/
}
.slider span img{
    position: absolute;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    border-radius: 10px;
    object-fit: cover;
    transition: 2s;
    
}
.slider span:hover img{
    transform: translateY(-50px) scale(1.2);
}